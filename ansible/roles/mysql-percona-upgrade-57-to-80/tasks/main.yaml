---
# tasks file for percona-mysql-upgrade

# tasks for pre-upgrade checks

# - name: pre-upgrade tasks
#   include_tasks: "pre_upgrade.yaml"

- name: Check if MySQL 8 is installed
  command: mysql --version
  register: mysql_version
  failed_when: false
  changed_when: false

- name: Print fail message if MySQL not installed on host
  fail:
    msg: "MySQL wasn't found on this host"
  when: mysql_version is undefined

# can fail if mysql already installed - commented out because I used conditionals to create idempotency instead
# - name: Print fail message if MySQL 8.0 installed
#   fail: 
#     msg: "MySQL 8.0 is already installed"
#   when: '8.0.' in mysql_version.stdout

- name: Print fail message if not RHEL-based system
  fail:
    msg: "OS needs to be RHEL-based"
  when: '"RedHat" not in ansible_os_family'

# tasks for uninstallation

# - name: uninstallion tasks
#   include_tasks: "uninstall.yaml"

- name: Copy file if 8.0 not installed
  copy:
      src: /etc/my.cnf
      dest: /etc/my.cnf.test
      remote_src: true
  when: '5.7.' in mysql_version.stdout

- name: Stop MYSQL service if 8.0 not installed
  service:
    name: mysql
    state: stopped
  when: '5.7.' in mysql_version.stdout

- name: Uninstall MySQL server and client packages if 8.0 not installed
  package:
      name: "{{ item }}"
      state: absent
  with_items:
      - "{{ previous_version_package_list }}"
  when: '5.7.' in mysql_version.stdout

#tasks for installation

# - name: installation tasks
#   include_tasks: "install.yaml"

- name: INSTALL REPO | Install Percona repo
  become: yes
  package:
    state: present
    name: "https://repo.percona.com/yum/percona-release-latest.noarch.rpm"
    use: auto

- name: Update Cache
  package:
    update_cache: yes

- name: "Set percona package to latest release"
  shell: "sudo percona-release enable-only ps-{{ percona_package_version }} release"
  when: '5.7.' in mysql_version.stdout

- name: INSTALL | Install Percona Server
  become: yes
  package:
    state: present
    name: "{{ item }}"
    use: auto
  with_items:
    - "{{ percona_packages }}"

# debian based system installation

# - name: Update apt cache
#   apt: update_cache=yes

# - name: Add Percona repository key
#   apt_key:
#     url: https://www.percona.com/downloads/RPM-GPG-KEY-percona
#     # url: https://repo.percona.com/apt/percona-release_latest.generic_all.deb
#     state: present

# - name: Add Percona repository
#   become: yes
#   apt_repository:
#     repo: "deb https://repo.percona.com/apt {{ ansible_distribution_release }} main"
#      # repo: "deb https://repo.percona.com/apt/percona-release_latest.generic_all.deb "
#     state: present

# - name: Adding percona source repository
#   apt_repository:
#     repo: 'deb-src http://repo.percona.com/apt {{ ansible_distribution_release }} main'
#     state: present

# - name: Update apt cache
#   apt: update_cache=yes

# - name: Run percona enable ps80
#   shell: sudo /usr/bin/percona-release setup ps80

# - name: Install Percona Server
#   apt:
#     name: percona-server-server

- name: Start MYSQL service
  service:
    name: mysql
    state: started